{"version":3,"sources":["components/Entry.js","components/List.js","components/Modal.js","components/QRScanner.js","components/App.js","index.js"],"names":["Entry","order","className","name","List","pastOrders","map","key","id","Modal","modalVisible","setScanBool","scanBool","setModalVisible","style","visibility","backgroundColor","display","onClick","textAlign","QRScanner","examineData","modalActivate","setModalActivate","updateOrder","useState","result","setResult","checkData","data","padding","boxShadow","delay","onError","err","console","log","handleError","onScan","handleScan","marginLeft","marginRight","width","maxWidth","height","maxHeight","justifyContent","margin","App","pendingOrders","setPendingOrders","setPastOrders","useEffect","getPastOrders","a","fetchPastOrders","pastFromServer","getPendingOrders","fetchPendingOrders","currentOrders","fetch","res","json","orderToGo","filter","method","orderReady","headers","body","JSON","stringify","slice","paddingTop","forEach","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a5f61612.chunk.js","sourcesContent":["import React from 'react'\n\nconst Entry = ({order}) => {\n    return (\n        <div className=\"entry\">\n            <h3>{order.name}</h3>\n        </div>\n    )\n}\n\nexport default Entry\n","import React from 'react';\nimport { useState } from 'react';\nimport Entry from './Entry';\n\nconst List = ({ pastOrders }) => {\n\n    return (\n        <div className=\"container bill\">\n            <h1>Previous Orders</h1>\n            {pastOrders.map(order => (\n                <Entry key={order.id} order={order}/>\n            ))}\n        </div>\n    )\n}\n\nexport default List\n","import React from 'react';\n\nconst Modal = ({modalVisible, scanBool, setScanBool, setModalVisible}) => {\n    \n    // console.log(\"Modal visibility is\", modalVisible);\n    // console.log(\"Scan boolean is \", scanBool);\n    // setScanBool(false);\n\n    return (\n        <div \n        style={\n            { \n            visibility: (modalVisible? 'visible':'hidden'), \n            backgroundColor: 'lightgreen',\n            display:'grid'\n            }\n        }\n        onClick={() => {\n            setScanBool(true)\n            setModalVisible(false);\n        }}\n        >\n            <div style={{textAlign:'center'}}>\n                <i className=\"ui large icon check\"></i>\n                <h1 style={{display:'inline'}}>All good! You're good to go.</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport QRReader from 'react-qr-reader';\nimport Modal from './Modal';\n\n//string \"buddiemeal\" is chosen as placeholder text. can swap this to whatever\nconst QRScanner = ({examineData, modalActivate, setModalActivate, updateOrder}) => {\n\n    const [result, setResult] = useState('');\n    const [scanBool, setScanBool] = useState(true);\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const ToggleTrue = () => {\n        //disabled timeout so that users HAVE to click on the modal to get rid of it. \n        //Looking into whether or not I want to change this.\n\n        // setTimeout(() => {\n        //     setModalVisible(false);\n        //     setScanBool(true);\n        // }, 5000);\n        setModalVisible(true);\n        setScanBool(false);\n        setModalActivate(false);\n    }\n\n    const handleScan = data => {\n        if (data) {\n            setResult(data);\n            checkData(result);\n        }\n        // console.log(\"scanning\");  \n    }\n\n    const checkData = (data) => {\n        //*CHANGE TO DATA YOU WANT*\n        // MAKE AN API CALL HERE\n        examineData(data);\n        if (modalActivate) {\n            updateOrder(data);\n            ToggleTrue();\n            setScanBool(false);\n            \n        } else {\n            setModalVisible(false);\n        }\n    }\n\n    const handleError = err => {\n        console.log(err);\n    }\n\n    //define a function that will be passed as a prop into Modal\n    //this function will disable the delay scan until the user taps the modal\n    //then, it will re-enable the scan by removing delay as a value.\n\n    const whatToRender = () => {\n        if (scanBool) {\n            return (\n                <div>\n                    <QRReader \n                    delay={(scanBool? 500: false)}\n                    onError={(err) => handleError(err)}\n                    onScan={(data) => handleScan(data)}\n                    style={{\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                        width: '100%',\n                        maxWidth: '600px'\n                    }}\n                    /> \n                </div>\n            );\n        } else {\n            return (\n            <div>\n                <div\n                    style={\n                        {\n                            backgroundColor:'lightgray',\n                            width: '100%',\n                            height: 'calc(100vw)',\n                            maxHeight: '600px',\n                            maxWidth: '600px',\n                            justifyContent:'center',\n                            margin:'auto',\n                            // borderRadius:'100%',\n                            textAlign: \"center\"\n                        }\n                    }\n                    >\n                </div>\n            </div>\n            )\n        }\n    }\n    // const isScan = (scanBool) => {\n    //     return scanBool? 500 : false;\n    // }\n    return (\n        <div>\n            <div style={{backgroundColor: 'lightgray', padding: '40px 0px', boxShadow: \"inset 0px 1px 10px 5px grey\"}}>\n                {whatToRender()}\n            </div>\n            <Modal modalVisible={modalVisible} scanBool={scanBool} setScanBool={setScanBool} setModalVisible={setModalVisible}/>\n        </div>\n    ) \n}\n\nexport default QRScanner;","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport List from './List';\nimport QRScanner from './QRScanner';\n\n//declare something here to pass into QRScanner as a prop, so \n//other components can access the data\n\n\nconst App = () => {\n\n    const [modalActivate, setModalActivate] = useState(false);\n    const [pendingOrders, setPendingOrders] = useState([]);\n    const [pastOrders, setPastOrders] = useState([]);\n\n    useEffect(() => {\n        const getPastOrders = async () => {\n            const pastFromServer = await fetchPastOrders();\n            setPastOrders(pastFromServer);\n        }\n\n        const getPendingOrders = async () => {\n            const currentOrders = await fetchPendingOrders();\n            setPendingOrders(currentOrders);\n        }\n        getPastOrders();\n        getPendingOrders();\n    }, []);\n\n    //  to fetch the pending orders \n    const fetchPendingOrders = async () => {\n        const res = await fetch('http://localhost:5000/pendingOrders');\n        const data = await res.json();\n        return data;\n    }\n\n    // to fetch PAST orders...\n    const fetchPastOrders = async () => {\n        const res = await fetch('http://localhost:5000/pastOrders');\n        const data = await res.json();\n        return data;\n    }\n\n    const updateOrder = async (id) => {\n        \n        const orderToGo = pendingOrders.filter(order => order.id == id);\n\n        await fetch(`http://localhost:5000/pendingOrders/${id}`,{\n            method: \"DELETE\"\n        })\n        setPendingOrders(pendingOrders.filter((orderReady) => orderReady.id !== id))\n\n\n        const res = await fetch(`http://localhost:5000/pastOrders`,{\n            method: \"POST\" ,\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(orderToGo).slice(1,-1)\n        })\n\n        const data = await res.json();\n        setPastOrders([...pastOrders, data]);\n    }\n\n    const examineData = (id) => {\n        pendingOrders.forEach((order) => {\n            // i COULD have some specific state here that gets passed into\n            // the QRScanner, or...\n            if (order.id == id) {\n                setModalActivate(true);\n            }\n        })\n    }\n\n    \n\n    return (\n    <div>\n        <h1 className=\"\" style={{padding: '20px', paddingTop:'40px', textAlign:'center', boxShadow:\"0px 10px 0px 0px black blur\"}}>BuddieMeal QR Code Scanner</h1>\n        <QRScanner \n            examineData={examineData} \n            modalActivate={modalActivate} \n            setModalActivate={setModalActivate}\n            updateOrder={updateOrder}\n        />\n        <List pastOrders={pastOrders}/>\n    </div>\n        );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}