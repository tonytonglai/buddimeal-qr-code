{"ast":null,"code":"var _jsxFileName = \"/Users/tonylai/buddiemeal-web-qr/src/components/QRScanner.js\";\nimport React, { useState, useEffect } from 'react';\nimport QRReader from 'react-qr-reader';\nimport Modal from './Modal';\nconsole.log(window.innerHeight);\n\nconst QRScanner = () => {\n  const [result, setResult] = useState('');\n  const [modalVisible, setModalVisible] = useState(false);\n  useEffect(() => {\n    console.log('');\n  }, [result]);\n\n  const ToggleTrue = () => {\n    setTimeout(() => {\n      setModalVisible(false);\n    }, 5000);\n    setModalVisible(true);\n  };\n\n  const handleScan = data => {\n    if (data) {\n      setResult(data);\n      checkData(result);\n    }\n\n    console.log('scanning');\n  }; //\n\n\n  const checkData = data => {\n    if (data === 'pee pee') {\n      ToggleTrue();\n    } else {\n      setModalVisible(false);\n    }\n  };\n\n  const handleError = err => {\n    console.log(err);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'lightgray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QRReader, {\n    delay: 500,\n    onError: err => handleError(err),\n    onScan: data => handleScan(data),\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: '100%',\n      maxWidth: '600px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    modalVisible: modalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default QRScanner;","map":{"version":3,"sources":["/Users/tonylai/buddiemeal-web-qr/src/components/QRScanner.js"],"names":["React","useState","useEffect","QRReader","Modal","console","log","window","innerHeight","QRScanner","result","setResult","modalVisible","setModalVisible","ToggleTrue","setTimeout","handleScan","data","checkData","handleError","err","backgroundColor","marginLeft","marginRight","width","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEAC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,WAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AAGAC,EAAAA,SAAS,CAAC,MAAK;AACXG,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACH,GAFQ,EAEP,CAACI,MAAD,CAFO,CAAT;;AAIA,QAAMI,UAAU,GAAG,MAAM;AACrBC,IAAAA,UAAU,CAAC,MAAM;AACbF,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH,KAFS,EAEP,IAFO,CAAV;AAIAA,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAND;;AAQA,QAAMG,UAAU,GAAGC,IAAI,IAAI;AACvB,QAAIA,IAAJ,EAAU;AACNN,MAAAA,SAAS,CAACM,IAAD,CAAT;AACAC,MAAAA,SAAS,CAACR,MAAD,CAAT;AACH;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,GAND,CAlBoB,CAyBxB;;;AACI,QAAMY,SAAS,GAAID,IAAD,IAAU;AACxB,QAAIA,IAAI,KAAK,SAAb,EAAwB;AACpBH,MAAAA,UAAU;AACb,KAFD,MAEO;AACHD,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ,GAND;;AAQA,QAAMM,WAAW,GAAGC,GAAG,IAAI;AACvBf,IAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE,GADX;AAEI,IAAA,OAAO,EAAGD,GAAD,IAASD,WAAW,CAACC,GAAD,CAFjC;AAGI,IAAA,MAAM,EAAGH,IAAD,IAAUD,UAAU,CAACC,IAAD,CAHhC;AAII,IAAA,KAAK,EAAE;AACHK,MAAAA,UAAU,EAAE,MADT;AAEHC,MAAAA,WAAW,EAAE,MAFV;AAGHC,MAAAA,KAAK,EAAE,MAHJ;AAIHC,MAAAA,QAAQ,EAAE;AAJP,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,eAcI,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADJ;AAkBH,CAxDD;;AA0DA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QRReader from 'react-qr-reader';\nimport Modal from './Modal';\n\nconsole.log(window.innerHeight);\n\nconst QRScanner = () => {\n\n    const [result, setResult] = useState('');\n    const [modalVisible, setModalVisible] = useState(false);\n\n\n    useEffect(() =>{\n        console.log('');\n    },[result]);\n\n    const ToggleTrue = () => {\n        setTimeout(() => {\n            setModalVisible(false);\n        }, 5000);\n\n        setModalVisible(true);\n    }\n\n    const handleScan = data => {\n        if (data) {\n            setResult(data);\n            checkData(result);\n        }\n        console.log('scanning');      \n    }\n//\n    const checkData = (data) => {\n        if (data === 'pee pee') {\n            ToggleTrue();\n        } else {\n            setModalVisible(false);\n        }\n    }\n\n    const handleError = err => {\n        console.log(err);\n    }\n\n    return (\n        <div>\n            <div style={{backgroundColor: 'lightgray'}}>\n            <QRReader \n                delay={500}\n                onError={(err) => handleError(err)}\n                onScan={(data) => handleScan(data)}\n                style={{\n                    marginLeft: 'auto',\n                    marginRight: 'auto',\n                    width: '100%',\n                    maxWidth: '600px'\n                }}\n            />\n            </div>\n            <Modal modalVisible={modalVisible}/>\n        </div>\n    ) \n}\n\nexport default QRScanner;"]},"metadata":{},"sourceType":"module"}