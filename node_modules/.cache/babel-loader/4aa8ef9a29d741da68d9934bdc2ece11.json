{"ast":null,"code":"var _jsxFileName = \"/Users/tonylai/buddiemeal-web-qr/src/components/App.js\";\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport List from './List';\nimport QRScanner from './QRScanner'; //declare something here to pass into QRScanner as a prop, so \n//other components can access the data\n\nconst App = () => {\n  const [modalActivate, setModalActivate] = useState(false);\n  const [pendingOrders, setPendingOrders] = useState([]);\n  const [pastOrders, setPastOrders] = useState([]);\n  useEffect(() => {\n    const getPastOrders = async () => {\n      const pastFromServer = await fetchPastOrders();\n      setPastOrders(pastFromServer);\n    };\n\n    const getPendingOrders = async () => {\n      const currentOrders = await fetchPendingOrders();\n      setPendingOrders(currentOrders);\n    };\n\n    getPastOrders();\n    getPendingOrders();\n  }, []); //  to fetch the pending orders \n\n  const fetchPendingOrders = async () => {\n    const res = await fetch('http://localhost:5000/pendingOrders');\n    const data = await res.json();\n    return data;\n  }; // to fetch PAST orders...\n\n\n  const fetchPastOrders = async () => {\n    const res = await fetch('http://localhost:5000/pastOrders');\n    const data = await res.json();\n    return data;\n  };\n\n  const updateOrders = async () => {\n    const order = await fetch(`http://localhost:5000/pendingOrders/${id}`, {\n      method: \"GET\"\n    });\n    console.log(order); // const res = await fetch(`http://localhost:5000/pastOrders`,{\n    //     method: \"POST\" ,\n    //     headers: {\n    //         \"Content-type\": \"application/json\"\n    //     },\n    //     body: JSON.stringify()\n    // })\n  };\n\n  const examineData = id => {\n    pendingOrders.forEach(order => {\n      // i COULD have some specific state here that gets passed into\n      // the QRScanner, or...\n      if (order.id == id) {\n        setModalActivate(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"\",\n    style: {\n      padding: '20px',\n      paddingTop: '40px',\n      textAlign: 'center',\n      boxShadow: \"0px 10px 0px 0px black blur\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"BuddieMeal QR Code Scanner\"), /*#__PURE__*/React.createElement(QRScanner, {\n    examineData: examineData,\n    modalActivate: modalActivate,\n    setModalActivate: setModalActivate,\n    updateOrders: updateOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    pastOrders: pastOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tonylai/buddiemeal-web-qr/src/components/App.js"],"names":["useState","useEffect","React","List","QRScanner","App","modalActivate","setModalActivate","pendingOrders","setPendingOrders","pastOrders","setPastOrders","getPastOrders","pastFromServer","fetchPastOrders","getPendingOrders","currentOrders","fetchPendingOrders","res","fetch","data","json","updateOrders","order","id","method","console","log","examineData","forEach","padding","paddingTop","textAlign","boxShadow"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAEd,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,aAAa,GAAG,YAAY;AAC9B,YAAMC,cAAc,GAAG,MAAMC,eAAe,EAA5C;AACAH,MAAAA,aAAa,CAACE,cAAD,CAAb;AACH,KAHD;;AAKA,UAAME,gBAAgB,GAAG,YAAY;AACjC,YAAMC,aAAa,GAAG,MAAMC,kBAAkB,EAA9C;AACAR,MAAAA,gBAAgB,CAACO,aAAD,CAAhB;AACH,KAHD;;AAIAJ,IAAAA,aAAa;AACbG,IAAAA,gBAAgB;AACnB,GAZQ,EAYN,EAZM,CAAT,CANc,CAoBd;;AACA,QAAME,kBAAkB,GAAG,YAAY;AACnC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACH,GAJD,CArBc,CA2Bd;;;AACA,QAAMN,eAAe,GAAG,YAAY;AAChC,UAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACH,GAJD;;AAMA,QAAME,YAAY,GAAG,YAAY;AAC7B,UAAMC,KAAK,GAAG,MAAMJ,KAAK,CAAE,uCAAsCK,EAAG,EAA3C,EAA6C;AAClEC,MAAAA,MAAM,EAAE;AAD0D,KAA7C,CAAzB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAL6B,CAO7B;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAdD;;AAgBA,QAAMK,WAAW,GAAIJ,EAAD,IAAQ;AACxBhB,IAAAA,aAAa,CAACqB,OAAd,CAAuBN,KAAD,IAAW;AAC7B;AACA;AACA,UAAIA,KAAK,CAACC,EAAN,IAAYA,EAAhB,EAAoB;AAChBjB,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AACJ,KAND;AAOH,GARD;;AAYA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,EAAd;AAAiB,IAAA,KAAK,EAAE;AAACuB,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,UAAU,EAAC,MAA7B;AAAqCC,MAAAA,SAAS,EAAC,QAA/C;AAAyDC,MAAAA,SAAS,EAAC;AAAnE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAEL,WADjB;AAEI,IAAA,aAAa,EAAEtB,aAFnB;AAGI,IAAA,gBAAgB,EAAEC,gBAHtB;AAII,IAAA,YAAY,EAAEe,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQI,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEZ,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADA;AAYH,CA1ED;;AA4EA,eAAeL,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport React from 'react';\nimport List from './List';\nimport QRScanner from './QRScanner';\n\n//declare something here to pass into QRScanner as a prop, so \n//other components can access the data\n\n\nconst App = () => {\n\n    const [modalActivate, setModalActivate] = useState(false);\n    const [pendingOrders, setPendingOrders] = useState([]);\n    const [pastOrders, setPastOrders] = useState([]);\n\n    useEffect(() => {\n        const getPastOrders = async () => {\n            const pastFromServer = await fetchPastOrders();\n            setPastOrders(pastFromServer);\n        }\n\n        const getPendingOrders = async () => {\n            const currentOrders = await fetchPendingOrders();\n            setPendingOrders(currentOrders);\n        }\n        getPastOrders();\n        getPendingOrders();\n    }, []);\n\n    //  to fetch the pending orders \n    const fetchPendingOrders = async () => {\n        const res = await fetch('http://localhost:5000/pendingOrders');\n        const data = await res.json();\n        return data;\n    }\n\n    // to fetch PAST orders...\n    const fetchPastOrders = async () => {\n        const res = await fetch('http://localhost:5000/pastOrders');\n        const data = await res.json();\n        return data;\n    }\n\n    const updateOrders = async () => {\n        const order = await fetch(`http://localhost:5000/pendingOrders/${id}`,{\n            method: \"GET\"\n        })\n\n        console.log(order);\n\n        // const res = await fetch(`http://localhost:5000/pastOrders`,{\n        //     method: \"POST\" ,\n        //     headers: {\n        //         \"Content-type\": \"application/json\"\n        //     },\n        //     body: JSON.stringify()\n        // })\n    }\n\n    const examineData = (id) => {\n        pendingOrders.forEach((order) => {\n            // i COULD have some specific state here that gets passed into\n            // the QRScanner, or...\n            if (order.id == id) {\n                setModalActivate(true);\n            }\n        })\n    }\n\n    \n\n    return (\n    <div>\n        <h1 className=\"\" style={{padding: '20px', paddingTop:'40px', textAlign:'center', boxShadow:\"0px 10px 0px 0px black blur\"}}>BuddieMeal QR Code Scanner</h1>\n        <QRScanner \n            examineData={examineData} \n            modalActivate={modalActivate} \n            setModalActivate={setModalActivate}\n            updateOrders={updateOrders}\n        />\n        <List pastOrders={pastOrders}/>\n    </div>\n        );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}